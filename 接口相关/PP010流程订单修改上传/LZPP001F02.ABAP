*模拟创建S自身及下阶所有C、G订单
FORM FRM_S_CREATE_SIMU1  USING  IS_INPUT TYPE ZDT_APS2SAP_PRO_PRO_REQ "APS请求消息
                         CHANGING CV_ERROR TYPE FLAG "订单创建成功标识
                                  CV_AUFNR TYPE AUFNR "订单创建成功后的订单号
                                  CS_OUTPUT TYPE ZDT_APS2SAP_PRO_RET_PRO_RET "APS请求的响应消息
                                  CS_LOG TYPE ZPITLOG0004. "订单创建日志
  DATA LT_STB TYPE TABLE OF STPOX.
  DATA LS_STB TYPE STPOX.
  DATA LT_STB_MERGE TYPE TABLE OF STPOX.
  DATA LT_STB_MERGE_FINAL TYPE TABLE OF STPOX.
  DATA LS_ORDER_DATA TYPE BAPI_PI_ORDER_CREATE.
  DATA LS_RETURN TYPE BAPIRET2.
  DATA LV_AUFNR TYPE AUFNR.
  DATA LV_VBELN TYPE VBELN.
  DATA LS_INPUT TYPE ZDT_APS2SAP_PRO_PRO_REQ.
  LS_INPUT = IS_INPUT.
  CLEAR CV_AUFNR.
  "S自身订单模拟创建
  PERFORM FRM_CREATE_PROCESS_ORDER_SIMU1 USING LS_INPUT
                                      CHANGING CV_ERROR
                                               CV_AUFNR
                                               CS_OUTPUT CS_LOG.
  IF CV_ERROR IS INITIAL.
*-------------------------------处理S展开的子订单-------------------------------
    PERFORM FRM_CALCULATE_BOM_REQ_SIMU USING LS_INPUT CHANGING LT_STB_MERGE_FINAL CV_ERROR.
    IF CV_ERROR = 'X'.
      CS_OUTPUT-TYPE = 'E'.
      CS_OUTPUT-MESSAGE = 'S订单预展开BOM失败'.
      CS_LOG-TYPE = 'E'.
      CS_LOG-MESSAGE = 'S订单预展开BOM失败'.
      RETURN.
    ENDIF.
*----------为生产S所需的所有半成品创建流程订单
    LOOP AT LT_STB_MERGE_FINAL INTO LS_STB."重组好的半成品
      CLEAR: LS_ORDER_DATA,LS_RETURN,LV_AUFNR.
      LS_ORDER_DATA-MATERIAL = LS_STB-IDNRK. "物料
      LS_ORDER_DATA-PLANT = LS_STB-WERKS. "生产工厂
      LS_ORDER_DATA-ORDER_TYPE = LS_INPUT-AUART. "订单类型
      LS_ORDER_DATA-BASIC_START_DATE = LS_INPUT-GSTRP."基本开始日期
      LS_ORDER_DATA-BASIC_END_DATE = LS_INPUT-GLTRP."基本完成日期
      LS_ORDER_DATA-QUANTITY = LS_STB-MNGLG. "计划生产数量
      LS_ORDER_DATA-QUANTITY_UOM = LS_STB-MMEIN."订单通用单位为基本计量单位
      LS_ORDER_DATA-PROD_VERSION = LS_INPUT-VERID."生产版本
      "-------增强字段赋值-----------
*      ls_order_data-zaufnr_s = cv_aufnr."S下阶订单的参考S订单号赋值
*      ls_order_data-zcharg = is_input-charg."批次号
      "-------增强字段赋值-----------

      CALL FUNCTION 'ZBAPI_PROCORD_CREATE'
        EXPORTING
          ORDERDATA    = LS_ORDER_DATA
        IMPORTING
          RETURN       = LS_RETURN
          ORDER_NUMBER = LV_AUFNR.
      IF LS_RETURN-TYPE = 'E' OR LS_RETURN-TYPE = 'A'.
        CV_ERROR = 'X'.
        CS_OUTPUT-TYPE = 'E'.
        CS_OUTPUT-MESSAGE = 'S子订单预创建失败' && LS_RETURN-MESSAGE..
        CLEAR: CS_LOG-AUFNR.
        CS_LOG-TYPE = 'E'.
        CS_LOG-MESSAGE = 'S子订单预创建失败' && LS_RETURN-MESSAGE.
      ENDIF.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
      IF CV_ERROR = 'X'.
        EXIT.
      ENDIF.
    ENDLOOP.
  ENDIF.
ENDFORM.
FORM FRM_CREATE_PROCESS_ORDER_SIMU1  USING  IS_INPUT TYPE ZDT_APS2SAP_PRO_PRO_REQ "APS请求消息
                                   CHANGING CV_ERROR TYPE FLAG "订单创建成功标识
                                            CV_AUFNR TYPE AUFNR "订单创建成功后的订单号
                                            CS_OUTPUT TYPE ZDT_APS2SAP_PRO_RET_PRO_RET "APS请求的响应消息
                                            CS_LOG TYPE ZPITLOG0004. "订单创建日志
  DATA LS_RETURN TYPE BAPIRET2.
*  DATA lv_aufnr TYPE aufnr.
  DATA LS_ORDER_DATA TYPE BAPI_PI_ORDER_CREATE.
  DATA LV_VBELN TYPE VBELN.
  CALL FUNCTION 'CONVERSION_EXIT_MATN5_INPUT'
    EXPORTING
      INPUT        = IS_INPUT-MATNR
    IMPORTING
      OUTPUT       = LS_ORDER_DATA-MATERIAL
    EXCEPTIONS
      LENGTH_ERROR = 1
      OTHERS       = 2.
  LS_ORDER_DATA-PLANT = IS_INPUT-WERKS."生产工厂
  LS_ORDER_DATA-ORDER_TYPE = IS_INPUT-AUART."订单类型
  LS_ORDER_DATA-BASIC_START_DATE = IS_INPUT-GSTRP."基本开始日期
  LS_ORDER_DATA-BASIC_END_DATE = IS_INPUT-GLTRP."基本完成日期
  LS_ORDER_DATA-QUANTITY = CEIL( IS_INPUT-GAMNG )."计划生产数量
  "订单通用单位为基本单位
  SELECT SINGLE MEINS INTO LS_ORDER_DATA-QUANTITY_UOM  FROM MARA WHERE MATNR = LS_ORDER_DATA-MATERIAL.
*  ls_order_data-scrap_quantity = 0."装配损耗已经包含在了quantity中
*  ls_order_data-quantity_uom = is_input-gmein."订单通用单位
  LS_ORDER_DATA-PROD_VERSION = IS_INPUT-VERID."生产版本
  "-------增强字段赋值-----------
*  PERFORM frm_crd_ci_aufk USING is_input 'X' '' CHANGING ls_order_data.
  "-------增强字段赋值-----------
  "不是S即M时需要写入销售订单号及行项目、交货容差
  IF IS_INPUT-ZSFS <> 'S'.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = IS_INPUT-KDAUF
      IMPORTING
        OUTPUT = LS_ORDER_DATA-SALES_ORDER.
    LS_ORDER_DATA-SALES_ORDER_ITEM = IS_INPUT-KDPOS.
    "销售订单行项目短溢值
    SELECT SINGLE ZDYTK FROM VBAP
     WHERE VBELN = @LS_ORDER_DATA-SALES_ORDER
       AND POSNR = @LS_ORDER_DATA-SALES_ORDER_ITEM
      INTO @DATA(LV_DYTK).
    IF SY-SUBRC = 0."获取并拆分短溢条款
      PERFORM FRM_GET_DYTK USING LV_DYTK CHANGING LS_ORDER_DATA-ZUNTTO LS_ORDER_DATA-ZUEBTO.
    ENDIF.
  ENDIF.
  CALL FUNCTION 'ZBAPI_PROCORD_CREATE'
    EXPORTING
      ORDERDATA    = LS_ORDER_DATA
    IMPORTING
      RETURN       = LS_RETURN
      ORDER_NUMBER = CV_AUFNR.
  IF LS_RETURN-TYPE = 'E' OR LS_RETURN-TYPE = 'A'.
    CV_ERROR = 'X'.
    CS_OUTPUT-TYPE = 'E'.
    CS_OUTPUT-MESSAGE = '订单模拟创建失败' && LS_RETURN-MESSAGE.
    CS_LOG-TYPE = 'E'.
    CS_LOG-MESSAGE = '订单模拟创建失败' && LS_RETURN-MESSAGE.
  ELSE.
*    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
  ENDIF.
  CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
ENDFORM.


*创建流程订单时AUFK表增强结构CI_AUFK赋值
FORM FRM_CRD_CI_AUFK USING VALUE(IS_INPUT) TYPE ZDT_APS2SAP_PRO_PRO_REQ "APS请求消息
                           VALUE(IV_S_SELF) TYPE FLAG "S订单本身
                           VALUE(IV_AUFNR_S) TYPE AFPO-AUFNR "参考S订单号
                     CHANGING CS_ORDER_DATA TYPE BAPI_PI_ORDER_CREATE."订单创建BAPI的传入参数
  DATA: LV_LEN TYPE I,
        LV_TO  TYPE I.
  "S自身订单
  IF IV_S_SELF = 'X'.
    CS_ORDER_DATA-ZAPSGUID = IS_INPUT-GUID."APS上传GUID
*    "S订单本身，这里必须设置S值，因为BAPI在创建S订单时是内部给号，需要在BAPI创建后给AUFNR_S参考S订单号赋值流程订单号
*    cs_order_data-zsfs = 'S'.
  ENDIF.
*  "非S即M订单设置GUID值
*  IF is_input-zsfs <> 'S'.
*    cs_order_data-zapsguid = is_input-guid."APS上传GUID
*  ENDIF.
  CS_ORDER_DATA-ZCHEJ = IS_INPUT-ZCHEJ."车间
  CS_ORDER_DATA-ZCHANX = IS_INPUT-ZCHANX."产线
  CS_ORDER_DATA-ZSTCQ = IS_INPUT-ZSTCQ."厂区
  CS_ORDER_DATA-ZAUFNR_CO = IS_INPUT-ZRSV01."内部订单
  CS_ORDER_DATA-ZKOSTL = IS_INPUT-ZRSV02."成本中心
  "流程订单可拆单标识
  IF IS_INPUT-ZMPC = '1'.
    CS_ORDER_DATA-ZMPC = 'X'."M可拆单标识
  ENDIF.
  "销售订单备注,长度最多500个字,这里把备注文本放在屏幕的2个字段中
  CONDENSE IS_INPUT-ZTEXT NO-GAPS."去空格
  IF IS_INPUT-ZTEXT IS NOT INITIAL .
    LV_LEN = STRLEN( IS_INPUT-ZTEXT )."销售订单备注字符数
    IF LV_LEN <= 250.
      CS_ORDER_DATA-ZSO_NOTE1 = IS_INPUT-ZTEXT.
    ELSEIF LV_LEN < 500.
      LV_TO = LV_LEN - 250.
      CS_ORDER_DATA-ZSO_NOTE1 = IS_INPUT-ZTEXT+0(250)."前250个字符
      CS_ORDER_DATA-ZSO_NOTE2 = IS_INPUT-ZTEXT+250(LV_TO)."后251-500字符
    ELSE.
      CS_ORDER_DATA-ZSO_NOTE1 = IS_INPUT-ZTEXT+0(250)."前250个字符
      CS_ORDER_DATA-ZSO_NOTE2 = IS_INPUT-ZTEXT+250(250)."后250个字符
    ENDIF.
  ENDIF.
  "中试研发备注
  CONDENSE IS_INPUT-ZRSV03 NO-GAPS.
  IF IS_INPUT-ZRSV03 IS NOT INITIAL.
    LV_LEN = STRLEN( IS_INPUT-ZRSV03 )."研发中试订单备注字符数
    IF LV_LEN <= 250.
      CS_ORDER_DATA-ZZS_NOTE = IS_INPUT-ZRSV03.
    ELSE.
      CS_ORDER_DATA-ZZS_NOTE = IS_INPUT-ZRSV03+0(250).
    ENDIF.
  ENDIF.
  "S订单批次号,其他M不需要设置批次号
  IF IS_INPUT-ZSFS = 'S'.
    CS_ORDER_DATA-ZCHARG = IS_INPUT-CHARG."批次号
  ENDIF.
  CS_ORDER_DATA-ZAUFNR_S = IV_AUFNR_S."参考S订单号
  CS_ORDER_DATA-ZCRD_BY_EX = 'X'."接口创建标识
ENDFORM.
*创建流程订单
FORM FRM_CREATE_PROCESS_ORDER1  USING  IS_INPUT TYPE ZDT_APS2SAP_PRO_PRO_REQ "APS请求消息
                               CHANGING CV_ERROR TYPE FLAG "订单创建成功标识
                                        CV_AUFNR TYPE AUFNR  "订单创建成功后的订单号
                                        CS_OUTPUT TYPE ZDT_APS2SAP_PRO_RET_PRO_RET "APS请求的响应消息
                                        CS_LOG TYPE ZPITLOG0004."订单创建日志
  DATA LS_RETURN TYPE BAPIRET2.
*  DATA lv_aufnr TYPE aufnr.
  DATA LS_ORDER_DATA TYPE BAPI_PI_ORDER_CREATE.
  DATA LV_VBELN TYPE VBELN.
  DATA LV_AUSSS TYPE AUSSS.
  DATA LV_ANDEC TYPE ANDEC.
  "物料编号
  CALL FUNCTION 'CONVERSION_EXIT_MATN5_INPUT'
    EXPORTING
      INPUT        = IS_INPUT-MATNR
    IMPORTING
      OUTPUT       = LS_ORDER_DATA-MATERIAL
    EXCEPTIONS
      LENGTH_ERROR = 1
      OTHERS       = 2.
  LS_ORDER_DATA-PLANT = IS_INPUT-WERKS."生产工厂
  LS_ORDER_DATA-ORDER_TYPE = IS_INPUT-AUART."订单类型
  LS_ORDER_DATA-BASIC_START_DATE = IS_INPUT-GSTRP."基本开始日期
  LS_ORDER_DATA-BASIC_START_TIME = IS_INPUT-ZRSV04."基本开始时间 S4DK906031
  LS_ORDER_DATA-BASIC_END_DATE = IS_INPUT-GLTRP."基本完成日期
  LS_ORDER_DATA-BASIC_END_TIME = IS_INPUT-ZRSV05."基本完成时间 S4DK906031
  "装配报废率
  SELECT SINGLE AUSSS FROM MARC INTO LV_AUSSS
    WHERE MATNR = LS_ORDER_DATA-MATERIAL
      AND WERKS = LS_ORDER_DATA-PLANT.
  "基本单位小数点位数
  SELECT SINGLE ANDEC
    FROM T006 INNER JOIN MARA ON T006~MSEHI = MARA~MEINS
    INTO LV_ANDEC
   WHERE MARA~MATNR = LS_ORDER_DATA-MATERIAL.
  IF LV_AUSSS <> 0 AND IS_INPUT-ZSFS = 'S'."有装配报废且是S订单
    LS_ORDER_DATA-SCRAP_QUANTITY = IS_INPUT-GAMNG * LV_AUSSS / 100."报废数量
    LS_ORDER_DATA-QUANTITY = IS_INPUT-GAMNG + LS_ORDER_DATA-SCRAP_QUANTITY."计划生产数量
  ELSE.
    LS_ORDER_DATA-QUANTITY = IS_INPUT-GAMNG."计划生产数量
  ENDIF.
  IF LV_ANDEC = 0."单位没有小数点位数，数量向上取整
    LS_ORDER_DATA-SCRAP_QUANTITY = CEIL(  LS_ORDER_DATA-SCRAP_QUANTITY ).
    LS_ORDER_DATA-QUANTITY = CEIL( LS_ORDER_DATA-QUANTITY ) .
  ENDIF.
  CS_LOG-GAMNG = LS_ORDER_DATA-QUANTITY."更新日志中的订单计划生产数量
  "订单通用单位为基本单位
  SELECT SINGLE MEINS INTO LS_ORDER_DATA-QUANTITY_UOM  FROM MARA WHERE MATNR = LS_ORDER_DATA-MATERIAL.
  LS_ORDER_DATA-PROD_VERSION = IS_INPUT-VERID."生产版本
  "非S即M时需要写入销售订单号及行项目、根据销售订单行项目的短溢值计算流程订单的交货容差上下限值
  IF IS_INPUT-KDAUF IS NOT INITIAL.
    CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
      EXPORTING
        INPUT  = IS_INPUT-KDAUF
      IMPORTING
        OUTPUT = LV_VBELN.
  ENDIF.
  IF IS_INPUT-ZSFS <> 'S'.
    LS_ORDER_DATA-SALES_ORDER = LV_VBELN."销售订单号
    LS_ORDER_DATA-SALES_ORDER_ITEM = IS_INPUT-KDPOS."销售订单行项目
    "销售订单行项目短溢值
    SELECT SINGLE ZDYTK FROM VBAP
     WHERE VBELN = @LS_ORDER_DATA-SALES_ORDER
       AND POSNR = @LS_ORDER_DATA-SALES_ORDER_ITEM
      INTO @DATA(LV_DYTK).
    IF SY-SUBRC = 0."获取并拆分短溢条款
      PERFORM FRM_GET_DYTK USING LV_DYTK CHANGING LS_ORDER_DATA-ZUNTTO LS_ORDER_DATA-ZUEBTO.
    ENDIF.
  ELSE."S订单
    LS_ORDER_DATA-ZKDAUF_S = LV_VBELN.
    LS_ORDER_DATA-ZKDPOS_S = IS_INPUT-KDPOS.
    "传输销售订单信息给BAPI质检出口ZXQPAU04(S订单BAPI不填销售订单)
    SET PARAMETER ID 'ZAPS_VBELN' FIELD ''."首先清空
    SET PARAMETER ID 'ZAPS_VBELN' FIELD LV_VBELN.
  ENDIF.
  "-------增强字段赋值-----------
*  IF is_input-zsfs = 'S'.
*    PERFORM frm_crd_ci_aufk USING is_input 'X' '' CHANGING ls_order_data.
*  ELSE.
*    PERFORM frm_crd_ci_aufk USING is_input '' '' CHANGING ls_order_data.
*ENDIF.
  PERFORM FRM_CRD_CI_AUFK USING IS_INPUT 'X' '' CHANGING LS_ORDER_DATA.
  "-------增强字段赋值-----------

  CALL FUNCTION 'BAPI_PROCORD_CREATE'
    EXPORTING
      ORDERDATA    = LS_ORDER_DATA
    IMPORTING
      RETURN       = LS_RETURN
      ORDER_NUMBER = CV_AUFNR.
  IF LS_RETURN-TYPE = 'E' OR LS_RETURN-TYPE = 'A'.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
    CV_ERROR = 'X'.
    CS_OUTPUT-TYPE = 'E'.
    CS_OUTPUT-MESSAGE = LS_RETURN-MESSAGE.
    CS_LOG-TYPE = 'E'.
    CS_LOG-MESSAGE = LS_RETURN-MESSAGE.
  ELSE."S流程订单创建成功
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT' EXPORTING  WAIT = 'X'.
    "保存日志记录
    CS_LOG-AUFNR = CV_AUFNR.
    CS_OUTPUT-AUFNR = CV_AUFNR.
    CS_LOG-MESSAGE = '流程订单' && CV_AUFNR && '创建成功'.
    CV_AUFNR = CV_AUFNR.
  ENDIF.
  IF CS_LOG-TYPE = 'E'.
    CV_ERROR = 'X'.
  ENDIF.
ENDFORM.
FORM FRM_RELEASE_ORDER1 USING  IT_BAPI_ORDER_KEY TYPE TT_BAPI_ORDER_KEY "需下达的订单号
                        CHANGING   CS_OUTPUT TYPE ZDT_APS2SAP_PRO_RET_PRO_RET "APS请求的响应消息
                                   CS_LOG TYPE ZPITLOG0004. "订单创建日志

  DATA LS_ORDER  TYPE BAPI_ORDER_KEY.
  DATA LT_ORDER  TYPE STANDARD TABLE OF BAPI_ORDER_KEY.
  DATA LS_RETURN TYPE BAPIRET2.
*  DATA lv_message TYPE char200.
*  DATA lv_objnr TYPE j_objnr.
*  DATA lv_stat TYPE j_status.
  DATA LV_ERROR TYPE FLAG.
  DATA LT_BAPI_ORDER_RETURN TYPE TABLE OF BAPI_ORDER_RETURN.
  LOOP AT IT_BAPI_ORDER_KEY INTO LS_ORDER.
    CLEAR:LV_ERROR,LT_ORDER.
    LT_ORDER = VALUE #(  ( ORDER_NUMBER = LS_ORDER-ORDER_NUMBER  ) ).
    CALL FUNCTION 'BAPI_PROCORD_RELEASE'
      IMPORTING
        RETURN        = LS_RETURN
      TABLES
        ORDERS        = LT_ORDER
        DETAIL_RETURN = LT_BAPI_ORDER_RETURN.
    LOOP AT LT_BAPI_ORDER_RETURN INTO DATA(LS_BAPI_ORDER_RETURN).
      IF LS_BAPI_ORDER_RETURN-TYPE = 'E' OR LS_BAPI_ORDER_RETURN-TYPE = 'A' .
        LV_ERROR = 'X'.
        EXIT.
      ENDIF.
    ENDLOOP.
    IF LV_ERROR = 'X'.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
      CS_OUTPUT-MESSAGE = |{ CS_OUTPUT-MESSAGE }{ ',' }{ LS_ORDER-ORDER_NUMBER ALPHA = OUT }{ '下达失败' }|.
      CS_LOG-MESSAGE = |{ CS_LOG-MESSAGE }{ ',' }{ LS_ORDER-ORDER_NUMBER ALPHA = OUT }{ '下达失败' }|.
      CS_LOG-TYPE = 'W'.
    ELSE.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT' EXPORTING  WAIT = 'X'.
      CS_OUTPUT-MESSAGE = |{ CS_OUTPUT-MESSAGE }{ ',' }{ LS_ORDER-ORDER_NUMBER ALPHA = OUT }{ '下达成功' }|.
      CS_LOG-MESSAGE = |{ CS_LOG-MESSAGE }{ ',' }{ LS_ORDER-ORDER_NUMBER ALPHA = OUT }{ '下达成功' }|.
    ENDIF.
  ENDLOOP.
ENDFORM.

FORM FRM_CREATE_MATERIAL_BATCH  USING IV_MATNR TYPE MATNR
                                    IV_WERKS TYPE WERKS_D
                                    IV_CHARG TYPE CHARG_D
                                    IV_AUFNR TYPE AFPO-AUFNR
                            CHANGING  CS_BAPIRET2 TYPE BAPIRET2.
  DATA LT_RETURN TYPE TABLE OF BAPIRET2.
  DATA LS_RETURN TYPE BAPIRET2.
  DATA LS_BATCHCONTROLFIELDS TYPE BAPIBATCHCTRL.
  CLEAR CS_BAPIRET2.
  CHECK IV_MATNR IS NOT INITIAL AND  IV_WERKS IS NOT INITIAL AND IV_CHARG IS NOT INITIAL.
  SELECT SINGLE MATNR, WERKS, CHARG FROM MCHA
    WHERE MATNR = @IV_MATNR
      AND WERKS = @IV_WERKS
      AND CHARG = @IV_CHARG
      AND LVORM = '' "删除标识
     INTO @DATA(LS_MCHA).
  IF SY-SUBRC <> 0."批次不存在需要新建
    "S批次的生产日期在流程订单收货的时候手动输入
    LS_BATCHCONTROLFIELDS-DOCLASSIFY = 'X'."分类对象需设置为X,创建批次时分类特性才能展开
    CALL FUNCTION 'BAPI_BATCH_CREATE'
      EXPORTING
        BATCH              = IV_CHARG
        PLANT              = IV_WERKS
        BATCHCONTROLFIELDS = LS_BATCHCONTROLFIELDS
        MATERIAL_LONG      = IV_MATNR
      TABLES
        RETURN             = LT_RETURN.
    LOOP AT LT_RETURN INTO LS_RETURN WHERE TYPE = 'E' OR TYPE = 'A'.
      CS_BAPIRET2-TYPE = 'E'.
      CS_BAPIRET2-MESSAGE =  '订单' && IV_AUFNR && '批次更新失败'.
      CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'.
      EXIT.
    ENDLOOP.
    IF CS_BAPIRET2-TYPE <> 'E'.
      CALL FUNCTION 'BAPI_TRANSACTION_COMMIT' EXPORTING  WAIT = 'X'.
      CS_BAPIRET2-TYPE = 'S'.
      CS_BAPIRET2-MESSAGE =  '订单' && IV_AUFNR && '批次更新成功'.
    ENDIF.
  ENDIF.
ENDFORM.
*S流程订单及子订单模拟修改
FORM FRM_CHANGE_ORDER_S_SIMU1  USING IS_INPUT TYPE ZDT_APS2SAP_PRO_U_PRO_REQ "请求消息结构
                                      IV_AUFNR_IN TYPE AUFNR "流程订单号
                                CHANGING CV_ERROR TYPE FLAG "修改结果标识
                                         IT_ORDER_CHANGE TYPE TT_ORDER_CHANGE "修改BAPI传入参数
                                         CS_OUTPUT TYPE ZDT_APS2SAP_PRO_U_RET_PRO_RET. "返回消息结构
  DATA LT_STB_MERGE_FINAL TYPE TT_STPOX.
  DATA LS_STB TYPE LINE OF TT_STPOX.
  DATA LS_BOM_CAL TYPE ZDT_APS2SAP_PRO_PRO_REQ.
  DATA LT_MATNR_BOM TYPE TABLE OF TY_MATNR. "S订单物料展BOM读取到的Z030物料
  DATA LT_MATNR_AUFNR TYPE TABLE OF TY_MATNR. "S订单的所有下级子订单物料
  DATA LS_ORDER_CHANGE TYPE TY_ORDER_CHANGE.
  DATA LV_QUANTITY TYPE GAMNG. "修改订单数量
  CLEAR:IT_ORDER_CHANGE, CV_ERROR.
  "获取S订单表头信息
  SELECT SINGLE AFPO~AUFNR,AFPO~MATNR,AFPO~CHARG, AFPO~DWERK AS WERKS,AFPO~PSMNG AS GAMNG,AFPO~MEINS, MARC~AUSSS
      FROM AFPO
    LEFT JOIN MARC ON AFPO~DWERK = MARC~WERKS AND AFPO~MATNR = MARC~MATNR
      WHERE AFPO~AUFNR = @IV_AUFNR_IN
      AND AFPO~XLOEK = '' "删除标识
      INTO @DATA(LS_AFPO).
  "订单不存在，不继续模拟
  IF SY-SUBRC <> 0.
    CV_ERROR = 'X'.
    CS_OUTPUT-TYPE = 'E'.
    CS_OUTPUT-MESSAGE = '订单不存在'.
    RETURN.
  ENDIF.
  "APS传过来的修改数量是净需求,需重算下装配报废数量
  TRY .
      LV_QUANTITY = CONV GAMNG( IS_INPUT-GAMNG ).
      LV_QUANTITY = LV_QUANTITY + ( LV_QUANTITY * LS_AFPO-AUSSS / 100 )."修改数量包含报废数量
      "基本单位没有小数点时，数量向上取整
      SELECT SINGLE ANDEC FROM T006 WHERE MSEHI = @LS_AFPO-MEINS INTO @DATA(LV_ANDEC).
      IF LV_ANDEC = 0.
        LV_QUANTITY = CEIL( LV_QUANTITY ).
      ENDIF.
    CATCH CX_ROOT INTO DATA(LO_CX_ROOT).
      CV_ERROR = 'X'.
      CS_OUTPUT-TYPE = 'E'.
      CS_OUTPUT-MESSAGE = |{ IV_AUFNR_IN ALPHA = OUT }{ '订单数量计算报废数量有误' }|.
      RETURN.
  ENDTRY.

  "S订单物料展BOM参数值---------------begin---
  LS_BOM_CAL-MATNR = LS_AFPO-MATNR."物料号
  LS_BOM_CAL-WERKS = LS_AFPO-WERKS."工厂
  LS_BOM_CAL-GAMNG = LV_QUANTITY."订单修改数量
  LS_BOM_CAL-GSTRP = IS_INPUT-GSTRP."基本开始日期
  LS_BOM_CAL-VERID = IS_INPUT-VERID."生产版本
  "S订单物料展BOM参数值---------------end---

  "S订单物料展BOM获取Z030组件物料
  CLEAR CV_ERROR.
  PERFORM FRM_CALCULATE_BOM_REQ_SIMU USING LS_BOM_CAL CHANGING LT_STB_MERGE_FINAL CV_ERROR.
  IF CV_ERROR = 'X'.
    CS_OUTPUT-TYPE = 'E'.
    CS_OUTPUT-MESSAGE = |{ IV_AUFNR_IN ALPHA = OUT }{ '订单物料展BOM失败' }|.
    RETURN.
  ENDIF.
  "S订单物料展BOM读取到的Z030物料
  LOOP AT LT_STB_MERGE_FINAL INTO LS_STB.
    LT_MATNR_BOM = VALUE #( BASE LT_MATNR_BOM ( MATNR = LS_STB-IDNRK ) ).
  ENDLOOP.
  "S订单的所有下级子订单
  SELECT AUFK~AUFNR,AUFK~WERKS,AFPO~MATNR,AFPO~PSMNG AS GAMNG,AFPO~CHARG,AFPO~MEINS
    FROM AUFK
    INNER JOIN AFPO ON AUFK~AUFNR = AFPO~AUFNR
*    LEFT JOIN marc ON afpo~dwerk = marc~werks AND afpo~matnr = marc~matnr
    WHERE AUFK~ZAUFNR_S = @IV_AUFNR_IN "参考S订单号
    AND AUFK~LOEKZ = '' "删除标识
    INTO TABLE @DATA(LT_AUFK).
  "S订单的所有下级子订单物料
  LOOP AT LT_AUFK INTO DATA(LS_AUFK).
    LT_MATNR_AUFNR = VALUE #( BASE LT_MATNR_AUFNR ( MATNR = LS_AUFK-MATNR ) ).
  ENDLOOP.
  "比较S订单物料展BOM读取到的Z030物料lt_matnr_bom与S订单的所有下级子订单物料lt_matnr_aufnr:
  "如果lt_matnr_bom与lt_matnr_aufnr的物料个数或物料号不一样，则S订单及子订单不能更改
  SORT LT_MATNR_AUFNR BY MATNR.
  SORT LT_MATNR_BOM BY MATNR.
  DELETE ADJACENT DUPLICATES FROM LT_MATNR_AUFNR COMPARING MATNR.
  DELETE ADJACENT DUPLICATES FROM LT_MATNR_BOM COMPARING MATNR.
  IF LINES( LT_MATNR_AUFNR ) = LINES( LT_MATNR_BOM ).
    LOOP AT LT_MATNR_AUFNR INTO DATA(LS_MATNR).
      READ TABLE LT_MATNR_BOM WITH KEY MATNR = LS_MATNR-MATNR TRANSPORTING NO FIELDS.
      IF SY-SUBRC <> 0.
        CV_ERROR =  'X'.
        CS_OUTPUT-TYPE = 'E'.
        CS_OUTPUT-MESSAGE = |{ IV_AUFNR_IN ALPHA = OUT }{ '订单展BOM后的Z030物料' }{ LS_MATNR-MATNR ALPHA = OUT }{ '在子订单中不存在' }|.
        EXIT.
      ENDIF.
    ENDLOOP.
  ELSE.
    CV_ERROR =  'X'.
    CS_OUTPUT-TYPE = 'E'.
    CS_OUTPUT-MESSAGE = |{ IV_AUFNR_IN ALPHA = OUT }{ '订单展BOM后的Z030物料与子订单物料个数不一样' }|.
  ENDIF.
  IF CV_ERROR = 'X'.
    RETURN.
  ENDIF.
  "S订单及子订单修改BAPI的传入参数----begin----
  "S订单传入参数
  LS_ORDER_CHANGE-NUMBER = LS_AFPO-AUFNR."订单号
  LS_ORDER_CHANGE-BASIC_START_DATE = IS_INPUT-GSTRP.  "基本开始日期
  LS_ORDER_CHANGE-BASIC_START_TIME = IS_INPUT-ZRSV04.  "基本开始时间 S4DK906031
  LS_ORDER_CHANGE-BASIC_END_DATE = IS_INPUT-GLTRP."基本完成日期
  LS_ORDER_CHANGE-BASIC_END_TIME = IS_INPUT-ZRSV05."基本完成时间 S4DK906031
  LS_ORDER_CHANGE-QUANTITY = LS_BOM_CAL-GAMNG."订单修改数量
  "订单报废数量
  LS_ORDER_CHANGE-SCRAP_QUANTITY = CEIL( LS_BOM_CAL-GAMNG - LS_BOM_CAL-GAMNG / ( 1 + LS_AFPO-AUSSS / 100 ) ).
  LS_ORDER_CHANGE-PROD_VERSION = IS_INPUT-VERID."生产版本
  "批次号
  IF IS_INPUT-CHARG <> LS_AFPO-CHARG."传入的批号与订单上不同时
    LS_ORDER_CHANGE-ZZCHARG = IS_INPUT-CHARG.
  ENDIF.
  "-----------增强字段赋值-----begin--------
  LS_ORDER_CHANGE-ZSTCQ = IS_INPUT-ZSTCQ."厂区
  LS_ORDER_CHANGE-ZCHEJ = IS_INPUT-ZCHEJ."车间
  LS_ORDER_CHANGE-ZCHANX = IS_INPUT-ZCHANX."产线
  LS_ORDER_CHANGE-ZUPD_BY_EX = 'X'."接口修改标识,必须赋值否则BAPI增强那边不能修改数据增强字段
  "-----------增强字段赋值-----end--------
  APPEND LS_ORDER_CHANGE TO IT_ORDER_CHANGE.

  "S订单子订单传入参数
  "S子订单物料基本单位的小数点位数
  IF LT_AUFK IS NOT INITIAL.
    SELECT MSEHI, ANDEC  FROM T006 FOR ALL ENTRIES IN @LT_AUFK WHERE MSEHI = @LT_AUFK-MEINS INTO TABLE @DATA(LT_T006).
  ENDIF.
  LOOP AT LT_AUFK INTO LS_AUFK.
    CLEAR LS_ORDER_CHANGE.
    LS_ORDER_CHANGE-NUMBER = LS_AUFK-AUFNR."子订单号
    LS_ORDER_CHANGE-BASIC_START_DATE = IS_INPUT-GSTRP.  "基本开始日期
    LS_ORDER_CHANGE-BASIC_START_TIME = IS_INPUT-ZRSV04.  "基本开始时间 S4DK906031
    LS_ORDER_CHANGE-BASIC_END_DATE = IS_INPUT-GLTRP."基本完成日期
    LS_ORDER_CHANGE-BASIC_END_TIME = IS_INPUT-ZRSV05."基本完成时间 S4DK906031
    LS_ORDER_CHANGE-PROD_VERSION = IS_INPUT-VERID."生产版本
    "批次号
    IF IS_INPUT-CHARG <> LS_AUFK-CHARG."传入的批号与订单上不同时
      LS_ORDER_CHANGE-ZZCHARG = IS_INPUT-CHARG.
    ENDIF.
    "子订单数量在展BOM重算后不包含报废数量了,需要加上报废数量
    READ TABLE LT_STB_MERGE_FINAL WITH KEY IDNRK = LS_AUFK-MATNR INTO LS_STB.
    IF SY-SUBRC = 0.
      LS_ORDER_CHANGE-QUANTITY = LS_STB-MNGLG * ( 1 + LS_STB-AUSSS / 100 )  ."订单修改数量+子订单物料的装配报废率
      "订单报废数量
      LS_ORDER_CHANGE-SCRAP_QUANTITY =  LS_ORDER_CHANGE-QUANTITY - LS_ORDER_CHANGE-QUANTITY / ( 1 + LS_STB-AUSSS / 100 ).
      "子订单物料基本单位没有小数点，需向上取整数量
      READ TABLE LT_T006 WITH KEY MSEHI = LS_AUFK-MEINS INTO DATA(LS_T006).
      IF SY-SUBRC = 0 AND LS_T006-ANDEC = 0.
        LS_ORDER_CHANGE-QUANTITY = CEIL( LS_ORDER_CHANGE-QUANTITY ).
        LS_ORDER_CHANGE-SCRAP_QUANTITY = CEIL( LS_ORDER_CHANGE-SCRAP_QUANTITY ).
      ENDIF.

      "-----------增强字段赋值-----begin--------
      LS_ORDER_CHANGE-ZAUSSS_UPD = LS_STB-AUSSS."装配报废率
    ENDIF.
    LS_ORDER_CHANGE-ZUPD_BY_EX = 'X'."接口修改标识,必须赋值否则BAPI增强那边不能修改数据增强字段
    "-----------增强字段赋值-----end--------
    APPEND LS_ORDER_CHANGE TO IT_ORDER_CHANGE.
  ENDLOOP.
  "S订单及子订单修改BAPI的传入参数----end----
  "模拟S订单及子订单修改-----begin--------
  LOOP AT IT_ORDER_CHANGE INTO LS_ORDER_CHANGE.
    PERFORM FRM_CHANGE_ORDER_SIMU1 USING LS_ORDER_CHANGE  CHANGING CV_ERROR CS_OUTPUT-MESSAGE.
    IF CV_ERROR = 'X'.
      CV_ERROR =  'X'.
      CS_OUTPUT-TYPE = 'E'.
      CS_OUTPUT-MESSAGE = |{ LS_ORDER_CHANGE-NUMBER ALPHA = OUT }{ '订单模拟修改失败,异常信息为:' }{ CS_OUTPUT-MESSAGE }|.
      EXIT.
    ENDIF.
  ENDLOOP.
  "模拟S订单及子订单修改-----end--------
ENDFORM.
*流程订单模拟修改
FORM FRM_CHANGE_ORDER_SIMU1 USING IS_ORDER_CHANGE TYPE TY_ORDER_CHANGE "修改BAPI传入参数
                            CHANGING CV_ERROR TYPE FLAG "修改错误标识
                                     CV_MESSAGE TYPE STRING."修改错误消息

  DATA LS_ORDER_DATA TYPE BAPI_PI_ORDER_CHANGE.
  DATA LS_ORDER_DATAX TYPE BAPI_PI_ORDER_CHANGEX.
  DATA LS_BAPIBATCHCTRL TYPE BAPIBATCHCTRL.
  DATA LS_RETURN TYPE BAPIRET2.
*  DATA lt_return TYPE TABLE OF bapiret2.
  CLEAR CV_ERROR.
  "基本开始日期
  IF IS_ORDER_CHANGE-BASIC_START_DATE IS NOT INITIAL.
    LS_ORDER_DATA-BASIC_START_DATE = IS_ORDER_CHANGE-BASIC_START_DATE.
    LS_ORDER_DATAX-BASIC_START_DATE = 'X'.
  ENDIF.
  "基本完成日期
  IF IS_ORDER_CHANGE-BASIC_END_DATE IS NOT INITIAL.
    LS_ORDER_DATA-BASIC_END_DATE = IS_ORDER_CHANGE-BASIC_END_DATE.
    LS_ORDER_DATAX-BASIC_END_DATE = 'X'.
  ENDIF.
  "订单修改数量
  LS_ORDER_DATA-QUANTITY = IS_ORDER_CHANGE-QUANTITY.
  LS_ORDER_DATAX-QUANTITY = 'X'.
  "订单报废数量
  LS_ORDER_DATA-SCRAP_QUANTITY = IS_ORDER_CHANGE-SCRAP_QUANTITY.
  LS_ORDER_DATAX-SCRAP_QUANTITY = 'X'.
  "生产版本
  IF IS_ORDER_CHANGE-PROD_VERSION IS NOT INITIAL.
    LS_ORDER_DATA-PROD_VERSION = IS_ORDER_CHANGE-PROD_VERSION.
    LS_ORDER_DATAX-PROD_VERSION = 'X'.
  ENDIF.
  "------增强字段赋值---begin------
  "批次号
  IF IS_ORDER_CHANGE-ZZCHARG IS NOT INITIAL.
    LS_ORDER_DATA-ZZCHARG = IS_ORDER_CHANGE-ZZCHARG.
    LS_ORDER_DATAX-ZZCHARG = 'X'.
  ENDIF.
  "厂区
  IF IS_ORDER_CHANGE-ZSTCQ IS NOT INITIAL.
    LS_ORDER_DATA-ZSTCQ = IS_ORDER_CHANGE-ZSTCQ.
    LS_ORDER_DATAX-ZSTCQ = 'X'.
  ENDIF.
  "车间
  IF IS_ORDER_CHANGE-ZCHEJ IS NOT INITIAL.
    LS_ORDER_DATA-ZCHEJ = IS_ORDER_CHANGE-ZCHEJ.
    LS_ORDER_DATAX-ZCHEJ = 'X'.
  ENDIF.
  "产线
  IF IS_ORDER_CHANGE-ZCHANX IS NOT INITIAL.
    LS_ORDER_DATA-ZCHANX = IS_ORDER_CHANGE-ZCHANX.
    LS_ORDER_DATAX-ZCHANX = 'X'.
  ENDIF.
  LS_ORDER_DATA-ZAUSSS_UPD = IS_ORDER_CHANGE-ZAUSSS_UPD."物料装配报废率
  LS_ORDER_DATAX-ZAUSSS_UPD = 'X'.
  LS_ORDER_DATA-ZUPD_BY_EX = 'X'."接口修改标识,必须赋值否则BAPI增强那边不能修改数据增强字段
  LS_ORDER_DATAX-ZUPD_BY_EX = 'X'.
  "------增强字段赋值---end------
  CALL FUNCTION 'ZBAPI_PROCORD_CHANGE'
    EXPORTING
      NUMBER     = IS_ORDER_CHANGE-NUMBER
      ORDERDATA  = LS_ORDER_DATA
      ORDERDATAX = LS_ORDER_DATAX
    IMPORTING
      RETURN     = LS_RETURN.
  CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'."不更新数据库
  IF LS_RETURN-TYPE = 'E' OR LS_RETURN-TYPE = 'A'."更新失败
    CV_ERROR = 'X'.
    CV_MESSAGE = LS_RETURN-MESSAGE.
  ENDIF.
ENDFORM.
*流程订单修改
FORM FRM_CHANGE_PROCESSORDER USING IS_ORDER_CHANGE TYPE TY_ORDER_CHANGE "修改BAPI传入参数
                              IV_ZSFS TYPE FLAG "S订单标识
                       CHANGING CV_ERROR TYPE FLAG "修改错误标识
                                CV_MESSAGE TYPE STRING."修改错误消息
  DATA LS_ORDER_DATA TYPE BAPI_PI_ORDER_CHANGE.
  DATA LS_ORDER_DATAX TYPE BAPI_PI_ORDER_CHANGEX.
  DATA LS_BAPIBATCHCTRL TYPE BAPIBATCHCTRL.
  DATA LS_RETURN TYPE BAPIRET2.
*  DATA lt_return TYPE TABLE OF bapiret2.
  CLEAR CV_ERROR.
  "基本开始日期
  IF IS_ORDER_CHANGE-BASIC_START_DATE IS NOT INITIAL.
    LS_ORDER_DATA-BASIC_START_DATE = IS_ORDER_CHANGE-BASIC_START_DATE.
    LS_ORDER_DATAX-BASIC_START_DATE = 'X'.
  ENDIF.
  "基本完成日期
  IF IS_ORDER_CHANGE-BASIC_END_DATE IS NOT INITIAL.
    LS_ORDER_DATA-BASIC_END_DATE = IS_ORDER_CHANGE-BASIC_END_DATE.
    LS_ORDER_DATAX-BASIC_END_DATE = 'X'.
  ENDIF.
  "订单修改数量、订单报废数量
  IF IS_ORDER_CHANGE-QUANTITY IS NOT INITIAL.
    LS_ORDER_DATA-QUANTITY = IS_ORDER_CHANGE-QUANTITY.
    LS_ORDER_DATAX-QUANTITY = 'X'.
    LS_ORDER_DATA-SCRAP_QUANTITY = IS_ORDER_CHANGE-SCRAP_QUANTITY.
    LS_ORDER_DATAX-SCRAP_QUANTITY = 'X'.
  ENDIF.
  "生产版本
  IF IS_ORDER_CHANGE-PROD_VERSION IS NOT INITIAL.
    LS_ORDER_DATA-PROD_VERSION = IS_ORDER_CHANGE-PROD_VERSION.
    LS_ORDER_DATAX-PROD_VERSION = 'X'.
  ENDIF.
  "交货容差,S订单不需要修改，M订单需要修改
  IF IV_ZSFS = 'M'.
    SELECT SINGLE VBAP~ZDYTK
      FROM VBAP INNER JOIN AFPO ON VBAP~VBELN = AFPO~KDAUF AND VBAP~POSNR = AFPO~KDPOS
      INTO @DATA(LV_DYTK)
      WHERE AFPO~AUFNR = @IS_ORDER_CHANGE-NUMBER.
    IF SY-SUBRC = 0."获取并拆分短溢条款
      PERFORM FRM_GET_DYTK USING LV_DYTK CHANGING LS_ORDER_DATA-ZZUNTTO LS_ORDER_DATA-ZZUEBTO.
      LS_ORDER_DATAX-ZZUNTTO = 'X'."交货不足限度
      LS_ORDER_DATAX-ZZUEBTO = 'X'."交货过量限度
    ENDIF.
  ENDIF.

  "------增强字段赋值---begin------
  "批次号
  IF IS_ORDER_CHANGE-ZZCHARG IS NOT INITIAL.
    LS_ORDER_DATA-ZZCHARG = IS_ORDER_CHANGE-ZZCHARG.
    LS_ORDER_DATAX-ZZCHARG = 'X'.
  ENDIF.
  "厂区
  IF IS_ORDER_CHANGE-ZSTCQ IS NOT INITIAL.
    LS_ORDER_DATA-ZSTCQ = IS_ORDER_CHANGE-ZSTCQ.
    LS_ORDER_DATAX-ZSTCQ = 'X'.
  ENDIF.
  "车间
  IF IS_ORDER_CHANGE-ZCHEJ IS NOT INITIAL.
    LS_ORDER_DATA-ZCHEJ = IS_ORDER_CHANGE-ZCHEJ.
    LS_ORDER_DATAX-ZCHEJ = 'X'.
  ENDIF.
  "产线
  IF IS_ORDER_CHANGE-ZCHANX IS NOT INITIAL.
    LS_ORDER_DATA-ZCHANX = IS_ORDER_CHANGE-ZCHANX.
    LS_ORDER_DATAX-ZCHANX = 'X'.
  ENDIF.
  "物料装配报废率
  IF IS_ORDER_CHANGE-ZAUSSS_UPD IS NOT INITIAL.
    LS_ORDER_DATA-ZAUSSS_UPD = IS_ORDER_CHANGE-ZAUSSS_UPD.
    LS_ORDER_DATAX-ZAUSSS_UPD = 'X'.
  ENDIF.
  LS_ORDER_DATA-ZUPD_BY_EX = 'X'."接口修改标识,必须赋值否则BAPI增强那边不能修改数据增强字段
  LS_ORDER_DATAX-ZUPD_BY_EX = 'X'.
  LS_ORDER_DATA-BASIC_START_TIME = IS_ORDER_CHANGE-BASIC_START_TIME. "基本开始时间 S4DK906031
  LS_ORDER_DATA-BASIC_END_TIME = IS_ORDER_CHANGE-BASIC_END_TIME. "基本结束时间 S4DK906031
  "------增强字段赋值---end------
  CALL FUNCTION 'BAPI_PROCORD_CHANGE'
    EXPORTING
      NUMBER     = IS_ORDER_CHANGE-NUMBER
      ORDERDATA  = LS_ORDER_DATA
      ORDERDATAX = LS_ORDER_DATAX
    IMPORTING
      RETURN     = LS_RETURN.
  IF LS_RETURN-TYPE = 'E' OR LS_RETURN-TYPE = 'A'."更新失败
    CV_ERROR = 'X'.
    CV_MESSAGE = LS_RETURN-MESSAGE.
    CALL FUNCTION 'BAPI_TRANSACTION_ROLLBACK'."不更新数据库
  ELSE.
    CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'  EXPORTING  WAIT = 'X'.
    "S订单及子订单需要创建批次号
    IF IV_ZSFS = 'S' AND IS_ORDER_CHANGE-ZZCHARG IS NOT INITIAL.
      SELECT SINGLE DWERK,MATNR FROM AFPO WHERE AUFNR = @IS_ORDER_CHANGE-NUMBER INTO @DATA(LS_AFPO).
      IF SY-SUBRC = 0.
        PERFORM FRM_CREATE_MATERIAL_BATCH USING LS_AFPO-MATNR LS_AFPO-DWERK IS_ORDER_CHANGE-ZZCHARG IS_ORDER_CHANGE-NUMBER
                                          CHANGING LS_RETURN.
        IF LS_RETURN-TYPE = 'E'.
          CV_MESSAGE = |{ CV_MESSAGE }{ ',' }{ LS_RETURN-MESSAGE }|.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.
ENDFORM.
"获取物料生产版本的发货仓库地点
FORM FRM_MAR_VERSION_STORAGE USING IV_MATNR TYPE MATNR IV_WERKS TYPE WERKS_D IV_VERID TYPE VERID CHANGING CV_ELPRO TYPE SA_ELPRO.
  DATA LS_MKAL  TYPE MKAL.
  CLEAR CV_ELPRO.
  CALL FUNCTION 'MKAL_SINGLE_READ'
    EXPORTING
*     KZRFB      = ' '
*     MAXTZ      = 0
      MATNR      = IV_MATNR
      WERKS      = IV_WERKS
      VERID      = IV_VERID
    IMPORTING
      WMKAL      = LS_MKAL
    EXCEPTIONS
      WRONG_CALL = 1
      NOT_FOUND  = 2
      OTHERS     = 3.
  IF SY-SUBRC = 0.
    CV_ELPRO = LS_MKAL-ELPRO .
  ENDIF.
ENDFORM.