FUNCTION Z_SD_APS_SO.
*"----------------------------------------------------------------------
*"*"本地接口：
*"  IMPORTING
*"     VALUE(I_VBAK) TYPE  VBAK
*"  EXPORTING
*"     VALUE(E_OUTPUT) TYPE  BAPIRET2
*"----------------------------------------------------------------------

  DATA L_INTID TYPE ZE_INTF_ID VALUE 'SD011'.

*----------------------------------------------------------------------
*   业务逻辑处理
*----------------------------------------------------------------------
  DATA:
    LV_ERROR        TYPE C,
    LV_STR          TYPE C,
    LS_ZPITLOG0008  TYPE ZPITLOG0008,
    LT_ZPITLOG0008  TYPE TABLE OF ZPITLOG0008,
    LS_ZPITLOG0008A TYPE ZPITLOG0008A,
    LT_ZPITLOG0008A TYPE TABLE OF ZPITLOG0008A,
    LS_VBAK         TYPE VBAK,
    LS_VBAP         TYPE VBAPVB,
    LT_VBAP         TYPE TABLE OF VBAP,
    LS_VBEP         TYPE VBEPVB,
    LT_VBEP         TYPE TABLE OF VBEP,
    LR_PROXY        TYPE REF TO ZCO_SI_SAP2APS_SO_OUT, "代理类
    LR_PROTOCOL     TYPE REF TO IF_WSPROTOCOL_MESSAGE_ID,
    LT_SO           TYPE ZSAP_ORDER_TAB,
    LS_SO           TYPE ZSAP_ORDER,
    LT_ITEM         TYPE ZSAP_ORDER_DETAIL_TAB,
    LS_ITEM         TYPE ZSAP_ORDER_DETAIL,
    LS_OUTPUT       TYPE ZSAP_TO_APS_SAP_ORDER_SOAP_IN.

* 异步确认的使用对象
  DATA:GO_SYS_FAULT   TYPE REF TO CX_AI_SYSTEM_FAULT,
       GO_ASYN_MSG    TYPE REF TO IF_WSPROTOCOL_ASYNC_MESSAGING,
       GO_PROTOCOL    TYPE REF TO IF_WSPROTOCOL_MESSAGE_ID,
       GV_ACK_REQUEST TYPE PRX_ACK_REQUEST_DETAILS.


  WAIT UP TO 10 SECONDS."异步调用，保持数据是最新的




*----------------------------------------------------------------------
*   日志记录-记录输入参数
*----------------------------------------------------------------------
  DATA(L_GUID) = ZCL_BC_PUBLIC=>GET_GUID( )."生成本次调用唯一标识
  DATA(L_FLAG) = ZCL_BC_PUBLIC=>WRITE_LOG( IV_LOGID = L_GUID IV_INTID = L_INTID IV_PTYPE = 'I' IS_DATA = I_VBAK ). "记录输入参数

**** 开关处理
  IF L_FLAG EQ 'A' OR   L_FLAG EQ 'E'.
    RETURN.
  ENDIF.

  TRY.
      CREATE OBJECT LR_PROXY.
      CLEAR LS_OUTPUT.

      LS_VBAK  = I_VBAK.



      CHECK LV_ERROR IS INITIAL.

      SELECT * INTO TABLE LT_VBAP FROM VBAP
        WHERE VBELN = LS_VBAK-VBELN.

      SELECT * INTO TABLE LT_VBEP FROM VBEP
         WHERE VBELN = LS_VBAK-VBELN.


      CHECK LS_VBAK-AUART = '01' OR  LS_VBAK-AUART+0(2) = 'ZA'.

      IF SY-SUBRC = 0.

        SELECT SPRAS, MSEHI, MSEHL
          FROM T006A
           FOR ALL ENTRIES IN @LT_VBAP[]
         WHERE MSEHI = @LT_VBAP-VRKME
           AND SPRAS = @SY-LANGU
          ORDER BY PRIMARY KEY
          INTO TABLE @DATA(LT_T006A).

        SELECT * INTO TABLE @DATA(LT_VBKD) FROM VBKD
          FOR ALL ENTRIES IN @LT_VBAP[]
          WHERE VBELN = @LT_VBAP-VBELN
            AND POSNR = @LT_VBAP-POSNR.

        SELECT MATNR,MAKTX INTO TABLE @DATA(LT_MAKT) FROM MAKT
          FOR ALL ENTRIES IN @LT_VBAP[]
          WHERE MATNR =  @LT_VBAP-MATNR.


        SELECT SINGLE * INTO @DATA(LS_T005T) FROM T005T
          WHERE LAND1 = @LS_VBAK-ZCKGJ
            AND SPRAS = @SY-LANGU.

        SELECT SINGLE * INTO @DATA(LS_TVTWT) FROM TVTWT
           WHERE VTWEG = @LS_VBAK-VTWEG
             AND SPRAS = @SY-LANGU.


        SELECT SINGLE * INTO @DATA(LS_BUT)   FROM BUT000
          WHERE PARTNER = @LS_VBAK-KUNNR.

        SELECT SINGLE * INTO @DATA(LS_USER)  FROM USER_ADDR
          WHERE BNAME = @LS_VBAK-ERNAM.

        SELECT SINGLE * INTO @DATA(LS_KNA1)  FROM KNA1
          WHERE KUNNR = @LS_VBAK-KUNNR.
        "业务合作伙伴-业务员
        SELECT SINGLE * INTO @DATA(LS_VBPA)  FROM VBPA
           WHERE VBELN = @LS_VBAK-VBELN
             AND PARVW = 'Z3'.
        IF LS_VBPA IS NOT INITIAL.
          SELECT SINGLE * INTO @DATA(LS_ADRC)  FROM ADRC
             WHERE ADDRNUMBER = @LS_VBPA-ADRNR.
        ENDIF.
        "业务合作伙伴-实际客户名称
*        SELECT SINGLE kna1~name1 FROM vbpa
*          INNER JOIN kna1 ON vbpa~kunnr = kna1~kunnr
*          WHERE vbpa~vbeln = @ls_vbak-vbeln
*          AND vbpa~parvw = 'Z1'
*          INTO @DATA(lv_z1_name1).

        SELECT SINGLE * INTO @DATA(LS_KNVV)  FROM KNVV
          WHERE KUNNR = @LS_VBAK-KUNNR
           AND VKORG = @LS_VBAK-VKORG
           AND VTWEG = @LS_VBAK-VTWEG
           AND SPART = @LS_VBAK-SPART.
        IF SY-SUBRC = 0.
          SELECT SINGLE * INTO @DATA(LS_TVV1T)  FROM TVV1T
              WHERE KVGR1 = @LS_KNVV-KVGR1
                AND SPRAS = @SY-LANGU.
        ENDIF.

        "非01类型的订单，只保留 ZA/ZB计划行
        IF LS_VBAK-AUART NE '01'.
          LOOP AT LT_VBEP INTO LS_VBEP.
            IF LS_VBEP-ETTYP = 'ZA' OR LS_VBEP-ETTYP = 'ZB' OR LS_VBEP-ETTYP = 'ZC' .
            ELSE.
              DELETE LT_VBEP[] INDEX SY-TABIX.
            ENDIF.
          ENDLOOP.
        ENDIF.

        IF LT_VBEP[] IS INITIAL.
          RETURN.
        ENDIF.
        "抬头赋值
        MOVE-CORRESPONDING LS_VBAK TO LS_SO.
        PERFORM FRM_READ_LONG_TEXT USING 'Z001' LS_VBAK-VBELN  '' 'VBBK'  CHANGING  LS_SO-ZSCWB."生产抬头备注
        LS_SO-ERNAM = LS_USER-NAME_LAST && LS_USER-NAME_FIRST."制单人
        LS_SO-BU_SORT1 = LS_BUT-BU_SORT1."客户简称
        LS_SO-ZXSQD = LS_TVTWT-VTEXT && '-' && LS_TVV1T-BEZEI."渠道
        LS_SO-ZKHJB = LS_KNA1-KUKLA."客户级别
        LS_SO-ZYWY = LS_ADRC-NAME1."业务员
        LS_SO-INCO2_L = LS_T005T-LANDX."出口国家
        "业务员名称、实际客户名称
        SELECT SINGLE KUNNR FROM VBPA WHERE VBELN = @LS_VBAK-VBELN AND POSNR IS INITIAL AND PARVW = 'Z1' INTO @DATA(LV_KUNNR).
        IF LV_KUNNR IS NOT INITIAL.
          SELECT SINGLE TVK1T~VTEXT KNA1~NAME1 INTO ( LS_SO-ADDITIONAL1 ,LS_SO-ADDITIONAL2 )
            FROM KNA1
            LEFT JOIN TVK1T ON KNA1~KATR1 = TVK1T~KATR1 AND TVK1T~SPRAS = SY-LANGU
            WHERE KNA1~KUNNR = LV_KUNNR.
        ENDIF.

*       创建日期取二审日期S4DK905628-S
        SELECT SINGLE UDATE FROM JCDS
        WHERE OBJNR = @LS_VBAK-OBJNR AND STAT ='E0003'
           INTO @DATA(LV_ERDAT).
        IF LV_ERDAT IS NOT INITIAL."S4DK905838
          LS_SO-ERDAT = LV_ERDAT.
        ENDIF.
        CLEAR LV_ERDAT.
*        S4DK905628-E
*        ls_so-additional1 = ls_kna1-katr1."属性1
        MOVE-CORRESPONDING LS_SO TO LS_ZPITLOG0008." 抬头

        "项目赋值
        LOOP AT LT_VBAP INTO LS_VBAP.
          IF LS_VBAK-AUART <> '01' AND  LS_VBAP-ABGRU <> '' .
            CONTINUE.
          ENDIF.
          READ TABLE LT_VBEP INTO LS_VBEP WITH KEY VBELN = LS_VBAP-VBELN
                                                   POSNR = LS_VBAP-POSNR.
          IF SY-SUBRC <>  0.
            CONTINUE.
          ENDIF.

          MOVE-CORRESPONDING LS_VBAP TO LS_ITEM.
          LS_ITEM-ZSCBLDH   = LS_VBAP-ZSCBLDH."生产备料单
          LS_ITEM-ZCPGG     = LS_VBAP-ZCPGG."规格
          LS_ITEM-ZBZGG     = LS_VBAP-ZBZGG."包装规格
          LS_ITEM-KWMENG    = LS_VBAP-KWMENG."数量

          IF LS_VBAP-ZYPSL IS INITIAL.
            LS_ITEM-ZYPSL = 'NULL'."样品数量
          ELSE.
            LS_ITEM-ZYPSL = LS_VBAP-ZYPSL."样品数量
          ENDIF.

          LS_ITEM-ZZHXS  = LS_VBAP-UMVKZ / LS_VBAP-UMVKN."销售单位转基本单位系数
****************************20191021 短益条款转换******************************************
*          LS_ITEM-ZDYTK  = LS_VBAP-ZDYTK."短益条款
          PERFORM FRM_READ_DOMAIN    USING 'ZD_DYTK' LS_VBAP-ZDYTK   CHANGING  LS_ITEM-ZDYTK ."短益条款
          LS_ITEM-WERKS  = LS_VBAP-WERKS."发货工厂
          LS_ITEM-ZYSJHQ = LS_VBAP-ZYSJHQ." 原始交货期
          LS_ITEM-ZNBJHQ = LS_VBAP-ZNBJHQ." 内部交货期
          LS_ITEM-ZZZTL  = LS_VBAP-ZZZTL." 最早投料日期
          LS_ITEM-ZZWTL  = LS_VBAP-ZZWTL." 最晚投料日期
          LS_ITEM-ZZZBZ  = LS_VBAP-ZZZBZ." 最早包装时间
          LS_ITEM-ZZWBZ  = LS_VBAP-ZZWBZ." 最晚包装时间
          LS_ITEM-ZBOMQQ = LS_VBAP-ZBOMQQ." BOM欠缺物料
          READ TABLE LT_VBKD INTO DATA(LS_VBKD) WITH KEY VBELN = LS_VBAP-VBELN
                                                         POSNR = LS_VBAP-POSNR.
          IF SY-SUBRC = 0.
            LS_ITEM-BSTKD_E = LS_VBKD-BSTKD_E." 客户合同单号
            LS_ITEM-POSEX_E = LS_VBKD-POSEX_E." 客户合同分录
          ENDIF.

          READ TABLE LT_MAKT INTO DATA(LS_MAKT) WITH KEY MATNR = LS_VBAP-MATNR BINARY SEARCH.
          IF SY-SUBRC EQ 0.
            LS_ITEM-ZCPMS = LS_MAKT-MAKTX.
          ENDIF.

          READ TABLE LT_T006A INTO DATA(LS_T006A) WITH KEY  MSEHI = LS_VBAP-VRKME.
          IF SY-SUBRC IS INITIAL.
            LS_ITEM-ZVRKME = LS_T006A-MSEHL."销售单位
          ENDIF.

          PERFORM FRM_READ_LONG_TEXT USING 'Z001'  LS_VBAK-VBELN LS_VBAP-POSNR 'VBBP'  CHANGING  LS_ITEM-ZSCHXMBZ."生产行项目备注
          PERFORM FRM_READ_DOMAIN    USING 'ZD_SFXBZ' LS_VBAP-ZSFXBZ   CHANGING  LS_ITEM-ZSFXBZ."是否新包装
          PERFORM FRM_READ_DOMAIN    USING 'ZD_XFLAG' LS_VBAP-ZSFXCP   CHANGING  LS_ITEM-ZSFXCP."是否新产品
          PERFORM FRM_READ_DOMAIN    USING 'ZD_XFLAG' LS_VBAP-ZSFBJ    CHANGING  LS_ITEM-ZSFBJ."是否报检
          PERFORM FRM_READ_DOMAIN    USING 'ZD_ZDSCQY' LS_VBAP-ZZDSCQY CHANGING  LS_ITEM-ZZDSCQY."指定生产区域
          PERFORM FRM_READ_DOMAIN    USING 'ZD_PHYQ' LS_VBAP-ZPHYQ     CHANGING  LS_ITEM-ZPHYQ."批号要求
          PERFORM FRM_READ_DOMAIN    USING 'ZD_BHCL' LS_VBAP-ZBHCL     CHANGING  LS_ITEM-ZBHCL."备货策略

          "需求计划新增字段 20191014
          PERFORM FRM_READ_LONG_TEXT USING  '0002'  LS_VBAK-VBELN LS_VBAP-POSNR 'VBBP'  CHANGING  LS_ITEM-ADDITIONAL2."项目注释文本
          PERFORM FRM_READ_LONG_TEXT USING  '0003'  LS_VBAK-VBELN LS_VBAP-POSNR 'VBBP'  CHANGING  LS_ITEM-ADDITIONAL3."包装注释文本
          PERFORM FRM_READ_LONG_TEXT USING  '0004'  LS_VBAK-VBELN LS_VBAP-POSNR 'VBBP'  CHANGING  LS_ITEM-ADDITIONAL4."交货注释文本


          READ TABLE LT_VBEP INTO LS_VBEP WITH KEY VBELN = LS_VBAP-VBELN POSNR = LS_VBAP-POSNR.
          IF SY-SUBRC = 0.
            IF LS_VBAK-AUART = '01'.  "备用字段1  计划行类别
              LS_ITEM-ADDITIONAL1 = LS_VBAP-ABGRU.
              LS_ITEM-ZYSJHQ = LS_VBEP-EDATU." 原始交货期
            ELSE.
              LS_ITEM-ADDITIONAL1 = LS_VBEP-ETTYP.
            ENDIF.
          ENDIF.
*          获取物料分类ZQUICK S4DK905628-S
          SELECT SINGLE A~ATWRT
            INTO LS_ITEM-ADDITIONAL5
            FROM AUSP AS A
            INNER JOIN CABN AS B ON A~ATINN = B~ATINN
          WHERE OBJEK = LS_VBAP-MATNR AND B~ATNAM = 'ZQUICK'." 快速放行
*        S4DK905628-E

          MOVE-CORRESPONDING LS_VBAP TO LS_ZPITLOG0008A.
          LS_ZPITLOG0008A-ZVRKME = LS_VBAP-VRKME.
          LS_ZPITLOG0008A-ZCPMS  = LS_MAKT-MAKTX.
          APPEND LS_ITEM TO LT_ITEM.
        ENDLOOP.

        LS_SO-SAP_ORDER_DETAIL_LIST-SAP_ORDER_DETAIL = LT_ITEM.
        APPEND LS_SO TO LT_SO.
        LS_OUTPUT-SAP_ORDER_LIST-SAP_ORDER =  LT_SO.

*** 设置确认状态
        GO_ASYN_MSG ?= LR_PROXY->GET_PROTOCOL(
                          IF_WSPROTOCOL=>ASYNC_MESSAGING ).
        GV_ACK_REQUEST =
          IF_WSPROTOCOL_ASYNC_MESSAGING=>CO_TRANSPORT_ACKNOWLEDGMENT.
        GO_ASYN_MSG->SET_ACKNOWLEDGMENT_REQUESTED( GV_ACK_REQUEST ).

*** 接口数据下发
        LR_PROXY->SI_SAP2APS_SO_OUT( LS_OUTPUT )."调用pi接口

      ENDIF.

      LR_PROTOCOL ?= LR_PROXY->GET_PROTOCOL( IF_WSPROTOCOL=>MESSAGE_ID ). "获取message_id
      DATA(L_MESSAGEID) = LR_PROTOCOL->GET_MESSAGE_ID( ).
      LS_ZPITLOG0008-MESSAGE_ID = L_MESSAGEID.
      LS_ZPITLOG0008A-MESSAGE_ID = L_MESSAGEID.
      LS_ZPITLOG0008-ERDAT = SY-DATUM.
      LS_ZPITLOG0008-ERNAM = SY-UNAME.
      LS_ZPITLOG0008-ERZET = SY-UZEIT.
      LS_ZPITLOG0008-TYPE  = 'S'.
      LS_ZPITLOG0008-MESSAGE  = '下发成功'.
      E_OUTPUT-TYPE    = LS_ZPITLOG0008-TYPE .
      E_OUTPUT-MESSAGE = LS_ZPITLOG0008-MESSAGE.
    CATCH CX_ROOT INTO DATA(LR_ROOT).
      LS_ZPITLOG0008-TYPE  = 'E'.
      LS_ZPITLOG0008-MESSAGE  = '下发失败'.
      LS_ZPITLOG0008-ERDAT = SY-DATUM.
      LS_ZPITLOG0008-ERNAM = SY-UNAME.
      LS_ZPITLOG0008-ERZET = SY-UZEIT.
      E_OUTPUT-TYPE    = LS_ZPITLOG0008-TYPE .
      E_OUTPUT-MESSAGE = LS_ZPITLOG0008-MESSAGE.
  ENDTRY.

  APPEND LS_ZPITLOG0008 TO LT_ZPITLOG0008.
  APPEND LS_ZPITLOG0008A TO LT_ZPITLOG0008A.
  CLEAR:LS_ZPITLOG0008,LS_ZPITLOG0008A.


*----------------------------------------------------------------------
*   日志记录-记录返回参数
*----------------------------------------------------------------------
  IF L_MESSAGEID IS INITIAL. L_MESSAGEID = L_GUID. ENDIF.
  ZCL_BC_PUBLIC=>WRITE_LOG( IV_LOGID = CONV #( L_MESSAGEID ) IV_INTID = L_INTID IV_PTYPE = 'E' IS_DATA = E_OUTPUT ). "记录输出参数

  IF LT_ZPITLOG0008 IS NOT  INITIAL.
    MODIFY ZPITLOG0008 FROM TABLE LT_ZPITLOG0008.
    IF SY-SUBRC = 0.
      LV_ERROR = ''.
    ELSE.
      LV_ERROR = 'X'.
    ENDIF.
  ENDIF.
  IF LT_ZPITLOG0008A IS NOT  INITIAL.
    MODIFY ZPITLOG0008A FROM TABLE LT_ZPITLOG0008A.
    IF SY-SUBRC = 0.
      LV_ERROR = ''.
    ELSE.
      LV_ERROR = 'X'.
    ENDIF.
  ENDIF.

  IF LV_ERROR = ''.
    COMMIT WORK.
  ELSE.
    ROLLBACK WORK.
  ENDIF.

ENDFUNCTION.

FORM FRM_READ_LONG_TEXT USING P_ID P_VBELN P_POSNR  P_OBJECT
                      CHANGING P_LTEXT.
  DATA TDLINES TYPE TABLE OF TLINE.

  CALL FUNCTION 'READ_TEXT'
    EXPORTING
      ID                      = P_ID
      LANGUAGE                = SY-LANGU
      NAME                    = CONV TDOBNAME( P_VBELN && P_POSNR )
      OBJECT                  = P_OBJECT
    TABLES
      LINES                   = TDLINES
    EXCEPTIONS
      ID                      = 1
      LANGUAGE                = 2
      NAME                    = 3
      NOT_FOUND               = 4
      OBJECT                  = 5
      REFERENCE_CHECK         = 6
      WRONG_ACCESS_TO_ARCHIVE = 7
      OTHERS                  = 8.

  CLEAR P_LTEXT.
  LOOP AT TDLINES ASSIGNING FIELD-SYMBOL(<FS_LINE>).
    P_LTEXT = P_LTEXT && <FS_LINE>-TDLINE.
  ENDLOOP.

ENDFORM.

FORM FRM_READ_DOMAIN USING U_DOMAN U_NAME
                     CHANGING C_TEXT.
  DATA:

    LV_RETURN TYPE SY-SUBRC,
    LT_DOMTAB TYPE STANDARD TABLE OF DD07V,
    LS_DOMTAB TYPE DD07V.


  CALL FUNCTION 'DD_DOMVALUES_GET'
    EXPORTING
      DOMNAME        = U_DOMAN
      TEXT           = 'X'
      LANGU          = SY-LANGU
    IMPORTING
      RC             = LV_RETURN
    TABLES
      DD07V_TAB      = LT_DOMTAB
    EXCEPTIONS
      WRONG_TEXTFLAG = 1
      OTHERS         = 2.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
          WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  READ TABLE LT_DOMTAB INTO LS_DOMTAB WITH KEY DOMVALUE_L = U_NAME.
  IF SY-SUBRC = 0.
    C_TEXT = LS_DOMTAB-DDTEXT.
  ENDIF.


ENDFORM.